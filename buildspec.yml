version: 0.2

env:
  variables:
    TERRAFORM_VERSION: "1.5.5"
    TF_DIRECTORY: "terraform_code"
    TF_COMMAND: "plan"

phases:
  install:
    commands:
      # Um único bloco de comandos para toda a instalação.
      - |
        echo "Detectando a arquitetura do sistema..."
        ARCH=$(uname -m)
        case ${ARCH} in
          x86_64) TF_ARCH="amd64" ;;
          aarch64) TF_ARCH="arm64" ;;
          *) echo "Arquitetura não suportada: ${ARCH}"; exit 1 ;;
        esac

        echo "Instalando o Terraform..."
        TF_FILENAME="terraform_${TERRAFORM_VERSION}_linux_${TF_ARCH}.zip"
        wget -q "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/${TF_FILENAME}"
        unzip "${TF_FILENAME}"
        
        # --- CORREÇÃO PRINCIPAL AQUI ---
        # 1. Mover o Terraform para um diretório local, não um diretório de sistema.
        # 2. Adicionar esse diretório local ao PATH do ambiente.
        mkdir -p $HOME/bin
        mv terraform $HOME/bin/terraform
        export PATH="$HOME/bin:$PATH"
        # -----------------------------

        echo "Verificando a versão do Terraform..."
        terraform --version

  pre_build:
    commands:
      - |
        echo "Navegando para o diretório do Terraform: ${TF_DIRECTORY}"
        cd "${TF_DIRECTORY}"
        echo "Diretório de trabalho atual: $(pwd)"

  build:
    commands:
      - |
        echo "Inicializando o Terraform..."
        terraform init -reconfigure

        echo "Executando o comando Terraform: ${TF_COMMAND}"
        case ${TF_COMMAND} in
          plan)
            echo "Gerando o plano do Terraform..."
            terraform plan
            ;;
          apply)
            echo "Gerando o plano para aplicação..."
            terraform plan -out=tfplan
            echo "Aplicando as configurações do Terraform..."
            terraform apply -auto-approve tfplan
            ;;
          destroy)
            echo "Destruindo a infraestrutura..."
            terraform destroy -auto-approve
            ;;
          *)
            echo "Comando '${TF_COMMAND}' inválido. Use 'plan', 'apply' ou 'destroy'."
            exit 1
            ;;
        esac

  post_build:
    commands:
      - echo "Build para o comando '${TF_COMMAND}' concluído."
